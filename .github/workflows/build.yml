name: Build

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # check:
  build:
    name: Page Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Config Git
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Update Submodule
        run: |
          git submodule sync
          git submodule update --init --recursive
          git submodule update --remote
          if [[ `git status --porcelain` ]]; then
            git add .
            git commit -m "Update Submodule"
            git push
          else
            echo pass
          fi
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: pip install -r ./requirements.txt
      - name: Page Build
        run: |
          git rev-parse --short HEAD | xargs -I % sed -i "s/githash: ''/githash: '%'/g" mkdocs.yml
          mkdocs build --strict
      - name: Upload Artifacts
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  # export:
  #   name: Export
  #   runs-on: ubuntu-latest
  #   needs: [build, check]
  #   steps:
  #     - name: Checkout main
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: 'true'
  #     - name: Setup Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.12'
  #     - name: Install Python dependencies
  #       run: pip install -r ./requirements.txt
  #     - name: Export to PDF
  #       run: mkdocs pdf-export --config-file mkdocs.yml --output-dir export --clean-export-dir --no-commit --no-push --no-pdf-export --no-serve --no-watch --no-reload --no-verbose --no-color --no-cache
