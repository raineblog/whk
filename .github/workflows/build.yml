name: Build Pages

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - 'todo.ipynb'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    if: ${{ github.event.head_commit && (
            startsWith(github.event.head_commit.message, '[build]') ||
            startsWith(github.event.head_commit.message, '[export]')
          ) }}
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install Dependencies
        run: pip install -r ./requirements.txt
      - name: Page Build
        run: |
          git rev-parse --short HEAD | xargs -I % sed -i "s/githash: ''/githash: '%'/g" mkdocs.yml
          mkdocs build --strict
      - name: Upload Artifacts
        id: deployment
        uses: actions/upload-pages-artifact@v4
        with:
          path: site/
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  export:
    if: startsWith(github.event.head_commit.message, '[export]')
    name: Export
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: script/requirements.txt
      - name: Install Dependencies
        run: |
          pip install -r ./script/requirements.txt
          sudo apt update
          sudo apt install pdf2svg
      - name: Install Playwright
        run: playwright install --with-deps chromium
      - name: Setup Typst
        uses: typst-community/setup-typst@v4
      - name: Check TOC
        run: python script/toc.py
      - name: Export to PDF
        run: |
          typst -V
          export TYPST_FONT_PATHS="./script/fonts"
          python ./script/export.py
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: ./script/*.pdf
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: JSON
          path: ./script/toc.json
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: export
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v5
      with:
        merge-multiple: true
        path: ./
    - name: Artifacts List
      run: ls -Rlh
    - name: Get Current Time
      id: datetime
      run: |
        echo "utc_time=$(date -u +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
        echo "cst_time=$(TZ='Asia/Shanghai' date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./*.pdf
        tag_name: ${{ steps.datetime.outputs.utc_time }}
