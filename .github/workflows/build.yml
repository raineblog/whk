name: Build Pages

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - 'todo.ipynb'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    if: ${{ github.event.head_commit && (
            startsWith(github.event.head_commit.message, '[build]') ||
            startsWith(github.event.head_commit.message, '[export]')
          ) }}
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install Dependencies
        run: pip install -r ./requirements.txt
      - name: Page Build
        run: make build
      - name: Upload Artifacts
        id: deployment
        uses: actions/upload-pages-artifact@v4
        with:
          path: site/
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  export:
    if: startsWith(github.event.head_commit.message, '[export]')
    name: Export
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: script/requirements.txt
      - name: Install pdf2svg
        uses: rishabhc32/apt-package-cache@v1.0.1
        with:
          packages: pdf2svg
          run-update: true
      - name: Install Dependencies
        run: pip install -r ./script/requirements.txt
      - name: Cache Playwright
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: ${{ runner.os }}-playwright-
      - name: Install Playwright
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: playwright install --with-deps chromium
      - name: Setup Typst
        uses: typst-community/setup-typst@v4
      - name: Export to PDF
        run: |
          typst -V
          export TYPST_FONT_PATHS="./script/fonts"
          python ./script/export_to_pdf.py
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: ./cache/*.pdf
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: export
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v5
      with:
        merge-multiple: true
        path: ./
    - name: Artifacts List
      run: ls -Rlh
    - name: Get Current Time
      id: datetime
      run: |
        echo "utc_time=$(date -u +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
        echo "cst_time=$(TZ='Asia/Shanghai' date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./*.pdf
        tag_name: ${{ steps.datetime.outputs.utc_time }}
